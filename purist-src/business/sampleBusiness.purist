from Builtin require [Strategy, Logger]

from sampleInstanceStrategy require [SampleInstanceStrategy]
from sampleType require [MyCustomType]
from sampleEnum require [MyCustomEnum]

// despite having a stateful attribute the class implements the Stateless interface
// which means a single instance exists but with a shared state
// changing the state's values will affect the other classes with the same dependency
public class SampleBusiness implements Stateless {
    private logging: Logger      // auto injected
    private myType: MyCustomType // not auto injected

    public process(variable: String): int {
        logging.info("SampleBusiness.process called")

        myType = new MyCustomType(
                name="Firstname",
                surname="Family-Name",
                dateOfBirth="2020/01/01 00:00:00"
        )

        myStrategy: SampleStrategy = new Strategy(variable)
        if myStrategy != null {
            myStrategy.process(myType)
        }

        return 0
    }
}